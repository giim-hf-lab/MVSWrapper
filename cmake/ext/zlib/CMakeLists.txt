get_ext_version(zlib __L_VERSION)

FetchContent_Declare(zlib
	GIT_REPOSITORY "${__G_GITHUB_PREFIX}madler/zlib.git"
	GIT_TAG "v${__L_VERSION}"
	GIT_SUBMODULES_RECURSE TRUE
	GIT_SHALLOW "${__G_FETCHCONTENT_GIT_SHALLOW}"
	GIT_REMOTE_UPDATE_STRATEGY CHECKOUT
	OVERRIDE_FIND_PACKAGE
)

FetchContent_MakeAvailable(zlib)

FetchContent_GetProperties(zlib SOURCE_DIR __L_ZLIB_DIR BINARY_DIR __L_ZLIB_BINARY_DIR)
file(COPY_FILE "${__L_ZLIB_BINARY_DIR}/zconf.h" "${__L_ZLIB_DIR}/zconf.h" ONLY_IF_DIFFERENT)

set_internal_cache(TARGETS_ENFORCE_SYSTEM TRUE "zlib" "zlibstatic")

get_archive_path("zlibstatic" __L_ZLIB_LIBRARY)

set(ZLIB_FOUND TRUE PARENT_SCOPE)
set(ZLIB_INCLUDE_DIRS "${__L_ZLIB_DIR}" PARENT_SCOPE)
set(ZLIB_LIBRARIES "${__L_ZLIB_LIBRARY}" PARENT_SCOPE)
set(ZLIB_VERSION "${__L_VERSION}" PARENT_SCOPE)
set(ZLIB_VERSION_STRING "${__L_VERSION}" PARENT_SCOPE)

string(REPLACE "." ";" __L_ZLIB_VERSION_LIST "${__L_VERSION}")
list(GET __L_ZLIB_VERSION_LIST 0 __L_ZLIB_VERSION_MAJOR)
list(GET __L_ZLIB_VERSION_LIST 1 __L_ZLIB_VERSION_MINOR)
list(GET __L_ZLIB_VERSION_LIST 2 __L_ZLIB_VERSION_PATCH)

set(ZLIB_VERSION_MAJOR "${__L_ZLIB_VERSION_MAJOR}" PARENT_SCOPE)
set(ZLIB_VERSION_MINOR "${__L_ZLIB_VERSION_MINOR}" PARENT_SCOPE)
set(ZLIB_VERSION_PATCH "${__L_ZLIB_VERSION_PATCH}" PARENT_SCOPE)
