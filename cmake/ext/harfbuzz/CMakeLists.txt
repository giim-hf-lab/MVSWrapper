set(HB_HAVE_FREETYPE ON)

if (WIN32)
	set(HB_HAVE_UNISCRIBE ON)
	set(HB_HAVE_GDI ON)
	set(HB_HAVE_DIRECTWRITE ON)
endif ()

get_ext_version(harfbuzz __L_VERSION)

FetchContent_Declare(harfbuzz
	GIT_REPOSITORY "${__G_GITHUB_PREFIX}harfbuzz/harfbuzz.git"
	GIT_TAG "${__L_VERSION}"
	GIT_SUBMODULES_RECURSE TRUE
	GIT_SHALLOW "${__G_FETCHCONTENT_GIT_SHALLOW}"
	GIT_REMOTE_UPDATE_STRATEGY CHECKOUT
	OVERRIDE_FIND_PACKAGE
)

FetchContent_MakeAvailable(harfbuzz)
FetchContent_GetProperties(harfbuzz BINARY_DIR __L_BINARY_DIR)

set_internal_cache(TARGETS_ENFORCE_SYSTEM TRUE "harfbuzz")

get_archive_path("harfbuzz" "${__L_BINARY_DIR}" __L_LIBRARY)

string(REPLACE "." ";" __L_VERSION_LIST "${__L_VERSION}")
list(GET __L_VERSION_LIST 0 __L_VERSION_MAJOR)
list(GET __L_VERSION_LIST 1 __L_VERSION_MINOR)
list(GET __L_VERSION_LIST 2 __L_VERSION_PATCH)

get_property(__L_INCLUDE_DIRS
	TARGET harfbuzz
	PROPERTY INTERFACE_INCLUDE_DIRECTORIES
)
set(__L_LIBRARIES "${__L_LIBRARY}" )
if (WIN32)
	list(APPEND __L_LIBRARIES
		"gdi32"
		"usp10"
		"rpcrt4"
	)
endif ()

set(HARFBUZZ_FOUND TRUE PARENT_SCOPE)
set(HARFBUZZ_VERSION "${__L_VERSION}" PARENT_SCOPE)
set(HARFBUZZ_VERSION_STRING "${__L_VERSION}" PARENT_SCOPE)
set(HARFBUZZ_VERSION_MAJOR "${__L_VERSION_MAJOR}" PARENT_SCOPE)
set(HARFBUZZ_VERSION_MINOR "${__L_VERSION_MINOR}" PARENT_SCOPE)
set(HARFBUZZ_VERSION_PATCH "${__L_VERSION_PATCH}" PARENT_SCOPE)

set(HARFBUZZ_INCLUDE_DIRS "${__L_INCLUDE_DIRS}" PARENT_SCOPE)
set(HARFBUZZ_LIBRARIES ${__L_LIBRARIES} PARENT_SCOPE)
